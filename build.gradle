plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
	
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = "${mod_name}-${minecraft_version}"

version = project.mod_version
group = project.group

loom {
    runs {
        // This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
        datagen {
            inherit server
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=dwarven-treasures"
 
            runDir "build/datagen"
        }
    }
}

// Add the generated resources to the main source set
sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}

repositories {
	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
	}
	maven {
		url "https://cursemaven.com"
	}
	maven {
		url "https://maven.architectury.dev/"
	}
	maven {
		url "https://maven.terraformersmc.com/releases/"
	}
	maven {
		name 'Gegy'
		url 'https://maven.gegy.dev'
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"

	mappings loom.layered() {
		officialMojangMappings()
//		parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
		parchment("org.parchmentmc.data:parchment-${previous_minecraft_version}:${parchment_version}@zip") // Waiting on 1.19.4
	}

	modRuntimeOnly "dev.lambdaurora:spruceui:${spruceui_version}+${minecraft_version}"
	modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"
	modRuntimeOnly "maven.modrinth:huge-structure-blocks:${hugestructureblocks_version}"
	modRuntimeOnly "curse.maven:worldedit-225608:${worldedit_id}"
	modRuntimeOnly "maven.modrinth:midnightlib:${midnightlib_version}-fabric"
	modRuntimeOnly "com.terraformersmc:modmenu:${modmenu_version}"
	modRuntimeOnly "maven.modrinth:jade:${jade_version}"

	implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

	modImplementation "net.fabricmc:fabric-loader:${loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}+${minecraft_version}"
//	modImplementation "vazkii.patchouli:Patchouli:${minecraft_version}-${patchouli_version}-FABRIC" Waiting on 1.19.4
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}